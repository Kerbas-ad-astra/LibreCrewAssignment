// This ModuleManager config enables the LiberatedCrewAssignment mod by tagging
// parts that require particular types of crew assignments.
//
// There are two types of modules which the mod provides, ModuleLibCrewAssignment
// and ModuleLibCrewRequirement.
//
// ModuleLibCrewAssignment is used on crewable parts. Its defaultAssignment field
// indicates what type of kerbal should be assigned to the slots in the part.
// Allowable values include a specific name (e.g. "Jebediah Kerman"), profession
// (e.g. "Pilot"), or kerbal type (e.g. "Crew", "Tourist"). Also allowable is
// "Empty", meaning "please leave the slot empty upon launch."  The assignment
// can include multiple values separated by "|" as a delimiter, to represent
// if-else semantics; for example, "Scientist | Crew" would mean "assign a
// scientist if available, otherwise assign any crew".
//
// ModuleLibCrewRequirement is used on NON-crewable parts that need a particular
// profession to operate them. Including this on a part is a signal to the mod
// that "please include at least one of the specified profession on the ship
// upon launch". The "importance" field provides relative priority, to decide
// who wins in case of a conflict (e.g. if there's only one open crew slot on
// the vessel, and one part wants a scientist but a different part wants an
// engineer).
//
// Here's a summary of how this file has been set up:
// 1. Try to crew all command modules.
// 2. Science labs should only be staffed by scientists.
// 3. Non-rerunnable science experiments (e.g. mystery goo) would like a scientist.
// 4. Resource converters & drills want an engineer.
//
// All other crewable parts are left empty by default (e.g. passenger cabins).
//
// If you want to change the behavior of the mod (e.g. if you prefer to crew
// passenger cabins by default, or whatever), just add your own ModuleManager
// config to decorate parts with ModuleLibCrewAssignment and/or ModuleLibCrewRequirement
// as desired.

// We want to fill all command modules
@PART[*]:HAS[@MODULE[ModuleCommand]:HAS[~minimumCrew[0]]] {
	MODULE {
		name = ModuleLibCrewAssignment
		defaultAssignment = Crew
	}
}

// Science labs are only for scientists
@PART[*]:HAS[@MODULE[ModuleScienceLab]] {
	MODULE {
		name = ModuleLibCrewAssignment
		defaultAssignment = Scientist | Empty
	}
}

// All other crewed parts are empty by default
@PART[*]:HAS[!MODULE[ModuleLibCrewAssignment],#CrewCapacity[*]] {
	MODULE {
		name = ModuleLibCrewAssignment
		defaultAssignment = Empty
	}
}

// Science experiments that aren't rerunnable want a scientist.
@PART[*]:HAS[@MODULE[ModuleScienceExperiment]:HAS[~rerunnable[True]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Scientist
		importance = 1
	}
}


// Parts that need an engineer.

@PART[*]:HAS[@MODULE[ModuleResourceConverter]:HAS[#Specialty[Engineer]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		importance = 2
	}
}

@PART[*]:HAS[@MODULE[ModuleResourceHarvester]:HAS[#Specialty[Engineer]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		importance = 2
	}
}

@PART[*]:HAS[@MODULE[ModuleAsteroidDrill]:HAS[#Specialty[Engineer]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		importance = 2
	}
}


// Repairable things need an engineer, but at a lower priority than
// everything above (including scientists for non-rerunnable stuff).
// (Thanks to HebaruSan in the KSP forums for the suggestion of adding this.)

@PART[*]:HAS[@MODULE[ModuleParachute]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		minimumLevel = 1
		importance = 0
	}
}

@PART[*]:HAS[@MODULE[ModuleWheelBase]:HAS[#wheelType[LEG]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		minimumLevel = 2
		importance = 0
	}
}

@PART[*]:HAS[@MODULE[ModuleWheelBase]:HAS[#wheelType[MOTORIZED]]] {
	MODULE {
		name = ModuleLibCrewRequirement
		profession = Engineer
		minimumLevel = 3
		importance = 0
	}
}
